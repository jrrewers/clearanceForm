{"version":3,"sources":["../../src/model/Mock_Models.js"],"names":[],"mappings":";;;;;AAGA,OAAO,OAAP,GAAiB,UAAU,QAAV,EAAoB;AACjC,QAAI,SAAS,SAAS,MAAtB;AACA,QAAI,cAAc,IAAI,MAAJ,CAAW;AACzB,kBAAU,MADe;AAEzB,kBAAU,MAFe;AAGzB,eAAO,EAAC,MAAM,MAAP,EAAe,MAAM,CAAC,yBAAD,EAA4B,uBAA5B,CAArB;AAHkB,KAAX,CAAlB;AAKA,aAAS,KAAT,CAAe,MAAf,EAAuB,WAAvB;;AAEA,QAAI,eAAe,IAAI,MAAJ,CAAW;AAC1B,kBAAU,MADgB;AAE1B,kBAAU,MAFgB;AAG1B,eAAO,EAAC,MAAM,MAAP,EAAe,MAAM,CAAC,yBAAD,EAA4B,uBAA5B,CAArB;AAHmB,KAAX,CAAnB;AAKA,QAAI,cAAc,SAAS,KAAT,CAAe,OAAf,EAAwB,YAAxB,CAAlB;AACH,CAfD","file":"Mock_Models.js","sourceRoot":"src","sourcesContent":["/**\r\n * Created by Jarek on 2016-07-31.\r\n */\r\nmodule.exports = function (mongoose) {\r\n    let Schema = mongoose.Schema;\r\n    let test_schema = new Schema({\r\n        username: String,\r\n        password: String,\r\n        group: {type: String, enum: ['clearance_unit_managers', 'clearance_unit_admins']}\r\n    });\r\n    mongoose.model('test', test_schema);\r\n\r\n    let test_schema2 = new Schema({\r\n        username: String,\r\n        password: String,\r\n        group: {type: String, enum: ['clearance_unit_managers', 'clearance_unit_admins']}\r\n    });\r\n    let test_model2 = mongoose.model('test2', test_schema2);\r\n};\r\n\r\n"]}