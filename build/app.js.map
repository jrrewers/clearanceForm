{"version":3,"sources":["../src/app.js"],"names":[],"mappings":"AAAA;;;;AACA,IAAM,gBAAgB,QAAQ,gBAAR,CAAtB;AACA,IAAM,WAAW,QAAQ,UAAR,CAAjB;;AAEA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,MAAM,SAAV;;AAEA,IAAI,KAAK,QAAQ,YAAR,EAAsB,QAAtB,CAAT;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,QAAQ,eAAR,CAAnB;AACA,IAAI,aAAe,QAAQ,aAAR,CAAnB;AACA,IAAI,UAAe,QAAQ,iBAAR,CAAnB;;AAEA,IAAM,SAAS,QAAQ,UAAR,CAAf;;AAEA,IAAI,GAAJ,CAAQ,SAAR,EAAmB,QAAQ,MAAR,CAAe,QAAf,CAAnB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,cAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAC,UAAU,IAAX,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ;AACZ,YAAQ,iBADI;AAEZ,YAAQ,IAFI;AAGZ,uBAAmB;AAHP,CAAR,CAAR;AAKA,IAAI,GAAJ,CAAQ,SAAS,UAAT,EAAR;AACA,IAAI,GAAJ,CAAQ,SAAS,OAAT,EAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,eAAR,GAAR;;AAEA,IAAM,UAAU,QAAQ,YAAR,CAAhB;AACA,IAAM,QAAQ,QAAQ,KAAR,EAAd;;AAEA,QAAQ,4BAAR,EAAsC,GAAtC,EAA2C,QAA3C,EAAqD,QAArD;AACA,QAAQ,iBAAR,EAA2B,GAA3B,EAAgC,QAAhC;AACA,QAAQ,mBAAR,EAA6B,GAA7B,EAAkC,QAAlC,EAA4C,QAA5C;;AAGA,IAAI,SAAS,IAAI,MAAJ,CAAW,IAAX,CAAb;;AAEA;;;;;;;AAQA;;;AAGA;AAAA,yDAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgB,QAAhB;AAAA;AAAA;;AAAA,WAAgB,QAAhB;AAAA;;AASA;;;;;;AAOA,OAAO,OAAP,CAAe,GAAf,GAAqB,GAArB","file":"app.js","sourceRoot":"src","sourcesContent":["'use strict';\r\nconst babelPolyfill = require('babel-polyfill');\r\nconst mongoose = require('mongoose');\r\n\r\nlet express = require('express');\r\nlet app = express();\r\n\r\nlet db = require('./model/db')(mongoose);\r\n\r\nlet passport = require('passport');\r\nlet morgan = require('morgan');\r\nlet cookieParser = require('cookie-parser');\r\nlet bodyParser   = require('body-parser');\r\nlet session      = require('express-session');\r\n\r\nconst bcrypt = require('bcryptjs');\r\n\r\napp.use('/public', express.static('public'));\r\napp.set('view engine', 'ejs');\r\napp.use(morgan('dev'));\r\napp.use(cookieParser());\r\napp.use(bodyParser.urlencoded({extended: true}));\r\napp.use(bodyParser.json());\r\napp.use(session({\r\n    secret: 'zażółćgęśląjaźń',\r\n    resave: true,\r\n    saveUninitialized: true\r\n}));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(require('connect-flash')());\r\n\r\nconst request = require('superagent');\r\nconst user1 = request.agent();\r\n\r\nrequire('./middleware/authorization')(app, passport, mongoose);\r\nrequire('./routes/common')(app, passport);\r\nrequire('./routes/employee')(app, passport, mongoose);\r\n\r\n\r\nlet server = app.listen(3000);\r\n\r\n/*const unhashedPassword = 'hasloa';\r\nconst passed = {\r\n    username: '1234567',\r\n    password: bcrypt.hashSync(unhashedPassword),\r\n    group: 'clearance_unit_managers'\r\n};*/\r\n\r\n\r\n/*let test_model = mongoose.model('test');\r\nlet test_model2 = mongoose.model('test2');*/\r\n\r\n(async function saveUser(){\r\n    /*try {\r\n        let saved = await new test_model2(passed).save();\r\n        console.log(saved);\r\n    } catch(e) {\r\n        console.log(e);\r\n    }*/\r\n})();\r\n\r\n/*user1\r\n    .post('http://127.0.0.1:3000/login')\r\n    .send({username: '123456', password: 'haslo'})\r\n    .end(function (err, res) {\r\n    });*/\r\n\r\n\r\nmodule.exports.app = app;"]}